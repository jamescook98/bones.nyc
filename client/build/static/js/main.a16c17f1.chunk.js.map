{"version":3,"sources":["assets/bones_final_large.png","assets/brick_wall_copy.jpg","components/NaviBar/index.js","components/EventsPage/index.js","components/ArtistForm/index.js","components/Container/index.js","components/Row/index.js","components/Col/index.js","components/EventForm/index.js","components/FavoritesPage/index.js","components/LoginPage/index.js","components/SignInPage/index.js","components/UserProfilePage/index.js","utils/API.js","pages/AddEvent.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NaviBar","mystyle","color","backgroundImage","BrickWall","boxShadow","className","style","src","Logo","alt","React","Component","EventsPage","backgroundColor","height","display","justifyContent","paddingTop","ArtistForm","Container","props","children","Row","Col","size","split","map","join","EventForm","console","log","musicevent","fluid","value","date","type","name","placeholder","onChange","handleInputChange","venuename","address","startTime","eventName","cover","setStartTime","onClick","handleFormSubmit","FavoritesPage","LoginPage","SignInPage","updateSettings","event","UserProfilePage","onSubmit","for","id","minlength","required","savedEvent","axios","post","AddEvent","useState","venueName","setArtistList","mevents","setEvents","performer","performances","e","preventDefault","target","data","sets","artistList","API","performance","index","key","label","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a16c17f1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bones_final_large.564a1162.png\";","module.exports = __webpack_public_path__ + \"static/media/brick_wall_copy.93f174de.jpg\";","import React from 'react';\nimport Logo from \"../../assets/bones_final_large.png\";\nimport BrickWall from \"../../assets/brick_wall_copy.jpg\";\nimport FadeIn from 'react-fade-in';\n\nexport default class NaviBar extends React.Component {\n    render() {\n        const mystyle = {\n            color: \"white\",\n            backgroundImage: `url(${BrickWall})`,\n            boxShadow: \"5px 10px 8px rgb(50, 50, 50, 0.2)\"\n        };\n\n        return (\n            <FadeIn>\n                <nav className=\"navbar\" style={mystyle}>\n                    <img src={Logo} alt=\"bones_logo\" className=\"my-2 ml-3\" ></img>\n                    <span className=\"navbar-brand mx-auto\">Welcome</span>\n                </nav>\n            </FadeIn >\n        );\n    }\n}\n\n\n\n","import React from 'react';\n\nexport default class EventsPage extends React.Component {\n    render() {\n        const mystyle = {\n            color: \"#1f60a7\",\n            backgroundColor: `#faf3f0`,\n            height: \"100vh\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            paddingTop: \"5rem\"\n\n        };\n\n        return (\n            <div style={mystyle}>\n\n                <h1>TEST</h1>\n\n            </div>\n        );\n    }\n}","import React from 'react';\n\nexport default function ArtistForm() {\n    return (<div></div>);\n}","import React from \"react\";\n\nfunction Container(props) {\n  return <div className=\"container\" style={props.style}>{props.children}</div>;\n}\n\nexport default Container;\n","import React from \"react\";\n\nfunction Row(props) {\n  return <div className=\"row\">{props.children}</div>;\n}\n\nexport default Row;\n","import React from \"react\";\n\nfunction Col(props) {\n  const size = props.size.split(\" \").map(size => \"col-\" + size).join(\" \");\n\n  return <div className={size}>{props.children}</div>;\n}\n\nexport default Col;\n","import React from 'react';\nimport Container from \"../Container\";\nimport Row from \"../Row\";\nimport Col from \"../Col\";\n\nexport default function EventForm(props) {\n    console.log(\"event form, props is\", props.musicevent)\n    return (\n        <Container fluid>\n            <Container>\n                <Row>\n                    <Col size=\"12\">\n                        <form>\n                            <div className=\"form-group\">\n                                <label className=\"EventForm\"><h3> Date </h3></label>\n                                <br></br>\n                                <input className=\"col-12 form-control\"\n                                    value={props.musicevent.date}\n                                    type=\"date\"\n                                    name=\"date\"\n                                    placeholder=\"date\"\n                                    onChange={props.handleInputChange}\n                                />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label className=\"EventForm\"><h3> VenueName </h3></label>\n                                <br></br>\n                                <input className=\"col-12 form-control\"\n                                    value={props.musicevent.venuename}\n                                    type=\"text\"\n                                    name=\"venueName\"\n                                    placeholder=\"Venue Name\"\n                                    onChange={props.handleInputChange}\n                                    //onChange={props.addVenuename}\n                                />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label className=\"EventForm\"><h3> Address </h3></label>\n                                <br></br>\n                                <input className=\"col-12 form-control\"\n                                    value={props.musicevent.address}\n                                    type=\"text\"\n                                    name=\"address\"\n                                    placeholder=\"Address\"\n                                    onChange={props.handleInputChange}\n                                />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label className=\"EventForm\"><h3> startTime </h3></label>\n                                <br></br>\n                                <input className=\"col-12 form-control\"\n                                    value={props.musicevent.startTime}\n                                    //type=\"time\"\n                                    type=\"date\"\n                                    name=\"startTime\"\n                                    placeholder=\"Start Time\"\n                                    onChange={props.handleInputChange}\n                                />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label className=\"EventForm\"><h3> Event Name </h3></label>\n                                <br></br>\n                                <input className=\"col-12 form-control\"\n                                    value={props.musicevent.eventName}\n                                    type=\"text\"\n                                    name=\"eventName\"\n                                    placeholder=\"Event Name\"\n                                    onChange={props.handleInputChange}\n                                />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label className=\"EventForm\"><h3> Cover </h3></label>\n                                <br></br>\n                                <input className=\"col-12 form-control\"\n                                    value={props.musicevent.cover}\n                                    type=\"number\"\n                                    name=\"cover\"\n                                    placeholder=\"cover cost\"\n                                    onChange={props.handleInputChange}\n                                />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label className=\"EventForm\"><h3> Set Start Time </h3></label>\n                                <br></br>\n                                <input className=\"col-12 form-control\"\n                                    value={props.musicevent.setStartTime}\n                                    type=\"time\"\n                                    name=\"setStartTime\"\n                                    placeholder=\"setStart Time\"\n                                    onChange={props.handleInputChange}\n                                />\n                            </div>\n                            <button type=\"submit\" className=\"submitBtn btn btn-primary\" onClick={props.handleFormSubmit}>\n                                Submit \n                             </button>\n                        </form>\n                    </Col>\n                </Row>\n            </Container>\n        </Container>\n    );\n}","import React from 'react';\n\nexport default function FavoritesPage() {\n    return (<div></div>);\n}","import React from 'react';\n\nexport default function LoginPage() {\n    return (<div></div>);\n}","import React from 'react';\n\nexport default function SignInPage() {\n    return (<div></div>);\n}","import React from 'react';\n// const currentPassRef = useRef();\n// const errorMsgRef = useRef();\n// const [currentPass, setCurrentPass] = useState(\"\");\n// const [errorMsg, setErrorMsg] = useState(\"\");\n\n// if (currentPass.current.value !== props.password) {\n//     setErrorMsg(\"Current password is incorrect.\")\n// }\n\n//if newUsername == props.username, error \"That already IS your username\"\n//if newUsername already exists in database && is !== props.username, error \"That username is already taken.\"\n//if after debounce (currentPass.current.value !== props.password), set span to \"Current password is incorrect.\"\n//if (newEmail does not take the form (\"letters/numbers/-/. not ending in -/.\"+\"@\"+\"letters/numbers/-/. not ending in -/.\"+\".\"+\"letters\")), set span to \"must be a valid email\"\n//if after debounce (newPassword.current.value !== reenterNewPassword), set span to \"Passwords do not match.\"\n\n//userID will be passed in. Fetch user info from database using ID. Store user info in \"state\"\n\nconst updateSettings = (event) => {\n    //event.target.username.value will give you whats inside the field named \"username\"(line 41(right now))\n}\nexport default function UserProfilePage() {\n\n    return (\n        <div>\n            <form onSubmit={updateSettings}>\n                <h1>User Settings</h1>\n\n                <h3>Change email</h3>\n                    Current email: <b>taher@taher.com</b><br />\n                <label for=\"oldPass\">New email:</label>\n                <input type=\"text\" id=\"newEmail\" name=\"email\"\n                    minlength=\"8\" required /><br />\n\n                <h3>Change username</h3>\n                    Current username: <b>taher</b><br />\n                <label for=\"oldPass\">New username:</label>\n                <input type=\"text\" id=\"newUsername\" name=\"username\"\n                    minlength=\"8\" required /><br />\n\n                <h3>Change password</h3>\n                <label for=\"currentPassword\">Current password:</label>\n                <input type=\"password\" id=\"currentPassword\" name=\"currentPassword\"\n                    minlength=\"8\" required /><br />\n                <span id=\"currentPasswordTest\" ></span>\n                <label for=\"newPassword\">New password:</label>\n                <input type=\"password\" id=\"newPassword\" name=\"newPassword\"\n                    minlength=\"8\" required /><br />\n                <label for=\"reenterNewPassword\">Re-enter new password:</label>\n                <input type=\"password\" id=\"reenterNewPassword\" name=\"reenterNewPassword\"\n                    minlength=\"8\" required />\n            </form>\n        </div>\n    );\n\n}","import axios from \"axios\"\r\n\r\nexport default {\r\n   \r\n    // Saves an Event to the database\r\n    saveEvent: function (savedEvent) {\r\n        console.log(\"In API.js saveEvent\");\r\n        return axios.post(\"/api/event\", savedEvent);\r\n    }\r\n\r\n}","import React, { useState } from \"react\";\r\nimport EventForm from \"../components/EventForm\";\r\nimport Container from \"../components/Container\";\r\nimport Row from \"../components/Row\";\r\nimport Col from \"../components/Col\";\r\nimport API from \"../utils/API\";\r\nimport {ArrowRight} from \"react-bootstrap-icons\";\r\nimport \"./style.css\"\r\n\r\nfunction AddEvent() {\r\n\r\n    const [mevents, setEvents] = useState({\r\n        date: \"\",\r\n        venueName: \"\",\r\n        address: \"\",\r\n        startTime: \"\",\r\n        eventName: \"\",\r\n        cover: \"\",\r\n        setStartTime: \"\",\r\n        setArtistList: \"\"\r\n    });\r\n\r\n    const [performances, setPerformances] = useState(\r\n        [\r\n            { startTime: \"100pm\", performer: \"Samson\" },\r\n            { startTime: \"11pm\", performer: \"Jonny\" }\r\n        ]\r\n    );\r\n\r\n    const handleInputChange = e => {\r\n        e.preventDefault();\r\n        console.log(\"Inside handleInputchange, e.target\", e.target);\r\n        const { name, value } = e.target\r\n        setEvents({ ...mevents, [name]: value })\r\n        console.log(\"Enter Handle Input Change funciton after setEvents, venue name is\", mevents);\r\n\r\n        // Before i call this individual function addVenuename, and code below works for a single \r\n        //setEvents({...mevents, venuename: e.target.value});\r\n        //console.log(\"Enter add venue name funciton, venue name is\", mevents.venuename);\r\n    }\r\n\r\n    const handleFormSubmit = (e) => {\r\n        let data = {\r\n            date: mevents.date,\r\n            venueName: mevents.venueName,\r\n            address: mevents.address,\r\n            startTime: mevents.startTime,\r\n            eventName: mevents.eventName,\r\n            cover: mevents.cover,\r\n            sets: [\r\n                {\r\n                    startTime: mevents.setStartTime,\r\n                    artistList: mevents.setArtistList\r\n                }]\r\n        }\r\n\r\n        console.log(\"When Submit form: mevents is:\", mevents);\r\n        //API.saveEvent(mevents);\r\n        API.saveEvent(data);\r\n\r\n    }\r\n\r\n    return (\r\n        <Container fluid>\r\n            <Container>\r\n                <Row>\r\n                    <Col size=\"12\">\r\n                        <EventForm\r\n                            //musicevent={mevents.venuename} addVenuename={addVenuename} handleFormSubmit={handleFormSubmit}\r\n                            musicevent={mevents}\r\n                            handleInputChange={handleInputChange}\r\n                            handleFormSubmit={handleFormSubmit}\r\n                        />\r\n                    </Col>\r\n                    <Col size=\"12\">\r\n                        <div>\r\n                            <h2> Times and Performerss </h2>\r\n                        </div>\r\n\r\n                        <Row>\r\n                            <form>\r\n                                {performances.map((performance, index) => (\r\n                                    <div key={index}>\r\n                                        <input\r\n                                            className=\"Btn\"\r\n                                            type=\"text\"\r\n                                            name=\"startTime\"\r\n                                            label=\"Show Start Time\"\r\n                                            value={performance.startTime} />\r\n\r\n                                        <input\r\n                                            className=\"Btn\"\r\n                                            type=\"text\"\r\n                                            name=\"performer\"\r\n                                            label=\"Show Performer\"\r\n                                            value={performance.performer} />\r\n\r\n                                            <ArrowRight/>;\r\n                                    </div>\r\n                                ))}\r\n\r\n                            </form>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </Container>\r\n    )\r\n} // AddEvent \r\n\r\nexport default AddEvent;","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport './App.css';\nimport NaviBar from './components/NaviBar';\nimport EventsPage from './components/EventsPage';\nimport ArtistForm from './components/ArtistForm';\nimport EventForm from './components/EventForm';\nimport FavoritesPage from './components/FavoritesPage';\nimport LoginPage from './components/LoginPage';\nimport SignInPage from './components/SignInPage';\nimport UserProfilePage from './components/UserProfilePage';\nimport AddEvent from './pages/AddEvent';\n\nfunction App() {\n  return (\n    <Router>\n      <NaviBar />\n      <Switch>\n        <Route exact path={\"/\"}>\n          <EventsPage />\n        </Route>\n        <Route exact path={\"/addartist\"}>\n          <ArtistForm />\n        </Route>\n        <Route exact path={\"/addevent\"}>\n          <AddEvent />\n        </Route>\n        <Route exact path={\"/favorites\"}>\n          <FavoritesPage />\n        </Route>\n        <Route exact path={\"/login\"}>\n          <LoginPage />\n        </Route>\n        <Route exact path={\"/signin\"}>\n          <SignInPage />\n        </Route>\n        <Route exact path={\"/userprofile\"}>\n          <UserProfilePage />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}